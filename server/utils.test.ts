import { describe, expect, it } from 'bun:test'
import { parseMessage } from './utils'

describe('parseMessage', () => {
  it('regular air alert', () => {
    const [_, alert] = parseMessage(`üî¥ 22:39 –ü–æ–≤—ñ—Ç—Ä—è–Ω–∞ —Ç—Ä–∏–≤–æ–≥–∞ –≤ –ß–µ—Ä–Ω—ñ–≥—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å
    –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –ø–æ–¥–∞–ª—å—à–∏–º–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏.
    #–ß–µ—Ä–Ω—ñ–≥—ñ–≤—Å—å–∫–∞_–æ–±–ª–∞—Å—Ç—å`)
    expect(alert[0]).toBe('–ß–µ—Ä–Ω—ñ–≥—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å')
  })

  it('artillery alert', () => {
    const [_, alert] = parseMessage(`üî¥ 19:20 –ó–∞–≥—Ä–æ–∑–∞ –∞—Ä—Ç–æ–±—Å—Ç—Ä—ñ–ª—É!
    –ó–∞—Ä–∞–∑ —É –º. –ù—ñ–∫–æ–ø–æ–ª—å —Ç–∞ –ù—ñ–∫–æ–ø–æ–ª—å—Å—å–∫–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–∞–ª—å–Ω–∞ –≥—Ä–æ–º–∞–¥–∞ –∞—Ä—Ç–∏–ª–µ—Ä—ñ–π—Å—å–∫–∏–π –æ–±—Å—Ç—Ä—ñ–ª.
    –ü—Ä–æ–π–¥—ñ—Ç—å –≤ —É–∫—Ä–∏—Ç—Ç—è!
    #–º_–ù—ñ–∫–æ–ø–æ–ª—å_—Ç–∞_–ù—ñ–∫–æ–ø–æ–ª—å—Å—å–∫–∞_—Ç–µ—Ä–∏—Ç–æ—Ä—ñ–∞–ª—å–Ω–∞_–≥—Ä–æ–º–∞–¥–∞`)

    expect(alert[0]).toBe('–º. –ù—ñ–∫–æ–ø–æ–ª—å —Ç–∞ –ù—ñ–∫–æ–ø–æ–ª—å—Å—å–∫–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–∞–ª—å–Ω–∞ –≥—Ä–æ–º–∞–¥–∞')
  })

  it('guided bombs alert', () => {
    const [_, alert] = parseMessage(`üü† 22:49 –£–í–ê–ì–ê !!! —É –ü–æ–ª–æ–≥—ñ–≤—Å—å–∫–∏–π —Ä–∞–π–æ–Ω
    –ó–∞–≥—Ä–æ–∑–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∫–µ—Ä–æ–≤–∞–Ω–∏—Ö –∞–≤—ñ–∞—Ü—ñ–π–Ω–∏—Ö –±–æ–º–± (–ö–ê–ë—ñ–≤).
    #–ü–æ–ª–æ–≥—ñ–≤—Å—å–∫–∏–π_—Ä–∞–π–æ–Ω`)

    expect(alert[0]).toBe('–ü–æ–ª–æ–≥—ñ–≤—Å—å–∫–∏–π —Ä–∞–π–æ–Ω')
  })

  it('clear alert', () => {
    const [clear] = parseMessage(`üü¢ 00:15 –í—ñ–¥–±—ñ–π —Ç—Ä–∏–≤–æ–≥–∏ –≤ –ß–µ—Ä–Ω—ñ–≥—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å.
    –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –ø–æ–¥–∞–ª—å—à–∏–º–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º–∏.
    #–ß–µ—Ä–Ω—ñ–≥—ñ–≤—Å—å–∫–∞_–æ–±–ª–∞—Å—Ç—å`)

    expect(clear[0]).toBe('–ß–µ—Ä–Ω—ñ–≥—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å')
  })

  it('part clear alert', () => {
    const [clear, alert] = parseMessage(`üü° 00:17 –£–í–ê–ì–ê !!! —É –ü–æ–ª–æ–≥—ñ–≤—Å—å–∫–∏–π —Ä–∞–π–æ–Ω.
    –ó–≤–µ—Ä–Ω—ñ—Ç—å —É–≤–∞–≥—É, —Ç—Ä–∏–≤–æ–≥–∞ —â–µ —Ç—Ä–∏–≤–∞—î —É:
    - –ó–∞–ø–æ—Ä—ñ–∑—å–∫–∞ –æ–±–ª–∞—Å—Ç—å
    #–ü–æ–ª–æ–≥—ñ–≤—Å—å–∫–∏–π_—Ä–∞–π–æ–Ω`)

    expect(clear[0]).toBe('–ü–æ–ª–æ–≥—ñ–≤—Å—å–∫–∏–π —Ä–∞–π–æ–Ω')
    expect(alert[0]).toBe('–ó–∞–ø–æ—Ä—ñ–∑—å–∫–∞ –æ–±–ª–∞—Å—Ç—å')
  })
})
